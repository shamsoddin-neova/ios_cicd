name: Build And Deploy iOS App To App Store
on:
  push:
    branches: master
jobs:
  build_and_deploy_ios_app_to_app_store:
    runs-on: macos-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.0.1.app

      - name: Install The Apple Certificate And Provisioning Profile
        env:
          DISTRIBUTION_PROFILE_BASE64: ${{ secrets.DISTRIBUTION_PROFILE_BASE64 }}
          DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          ls ~/Library/MobileDevice/Provisioning\ Profiles
          tree ~/Library/MobileDevice/Provisioning\

      # - name: Clean iOS App
      #   run: |
      #     xattr -w com.apple.xcode.CreatedByBuildSystem true /Users/runner/work/ios_cicd/ios_cicd/NeoCal/build
      #     xattr -w com.apple.xcode.CreatedByBuildSystem true /Users/runner/work/ios_cicd/ios_cicd/NeoCal/build/Release-iphoneos
      #     xcodebuild clean -project "./NeoCal/NeoCal.xcodeproj"

      # - name: Build iOS App
      #   run: |
      #     xcodebuild build -project "./NeoCal/NeoCal.xcodeproj" -destination generic/platform=iOS -configuration Release -provisioningProfile "YourProvisioningProfileUUID" -signingStyle "Manual" -allowProvisioningUpdates -signingCertificate "YourSigningCertificateName"

      # - name: Build iOS App
      #   env:
      #     IPHONEOS_DEPLOYMENT_TARGET: 16.2
      #   run: |
      #     xcodebuild build -project "./NeoCal/NeoCal.xcodeproj" -destination generic/platform=iOS CODE_SIGN_IDENTITY=- AD_HOC_CODE_SIGNING_ALLOWED=YES COMPILER_INDEX_STORE_ENABLE=NO -allowProvisioningUpdates
        # -allowProvisioningUpdates -authenticationKeyID 'SP634SRSSX' -authenticationKeyIssuerID '6701bcf4-21c5-4e25-9fd7-76af487a8e20' 

      # - name: Test app
      #   working-directory: ./NeoCal
      #   run: |
      #     xcodebuild clean test-without-building -project "./NeoCal/NeoCal.xcodeproj" -scheme "NeoCal" -destination 'platform=iOS Simulator,name=iPhone 15' -configuration Debug -derivedDataPath Build/ -enableCodeCoverage YES

      # - name: Archive iOS App
      #   run: |
      #     xcodebuild archive -project "./NeoCal/NeoCal.xcodeproj" -scheme "NeoCal" -destination generic/platform=iOS CODE_SIGN_IDENTITY=- AD_HOC_CODE_SIGNING_ALLOWED=YES COMPILER_INDEX_STORE_ENABLE=NO -allowProvisioningUpdates -archivePath NeoCal/build/NeoCal.xcarchive

      # - name: Export IPA
      #   run: xcodebuild -archivePath NeoCal/build/NeoCal.xcarchive -exportOptionsPlist NeoCal/export.plist -exportPath IPA -allowProvisioningUpdates -exportArchive CODE_SIGN_IDENTITY=- AD_HOC_CODE_SIGNING_ALLOWED=YES COMPILER_INDEX_STORE_ENABLE=NO -allowProvisioningUpdates
          
      # - name: List IPA
      #   run: ls IPA
